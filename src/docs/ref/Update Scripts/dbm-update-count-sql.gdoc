h1. dbm-update-count-sql

h2. Purpose

Writes the SQL that will partially update a database to STDOUT or a file.

h2. Description

Generates SQL for the specifed number of changeSets from the changelog. Executes against the database configured in @DataSource.groovy@ for the current environment (defaults to @dev@).

This is useful for inspecting the generated SQL before running an update, or to generate SQL which can be tuned before running manually.

Usage:
{code:java}
grails [environment] dbm-update-count-sql [number] [filename] --contexts=[contexts] --defaultSchema=[defaultSchema] --dataSource=[dataSource]
{code}

Required arguments:

* @number@ - The number of un-run changesets to run

Optional arguments:

* @filename@ - The path to the output file to write to. If not specified output is written to the console
* @contexts@ - A comma-delimited list of [context|http://www.liquibase.org/manual/contexts] names. If specified, only changesets tagged with one of the context names will be run
* @defaultSchema@ - The default schema name to use
* @dataSource@ - if provided will run the script for the specified dataSource.  Not needed for the default dataSource.

{note}
Note that the @contexts@, @defaultSchema@, and @dataSource@ parameter name and value must be quoted if executed in Windows, e.g.
{code}
grails dbm-update-count-sql "--contexts=[contexts]" "--defaultSchema=[defaultSchema]" "--dataSource=[dataSource]"
{code}
{note}

{note}
For the @dataSource@ parameter if the data source is configured as @dataSource_reports@ in DataSource.groovy
the suffix of @reports@ will be used as the parameter value.
{code}
--dataSource=reports
{code}
{note}
